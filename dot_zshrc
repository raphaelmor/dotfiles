# Uncomment for profiling startup time
# zmodload zsh/zprof

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

autoload -U compinit && compinit

path+=('/Users/raphaelmor/Code/odin/')
path+=('/Users/raphaelmor/.config/tmux/plugins/tmuxifier/bin')
path+=('/Users/raphaelmor/bin')
export PATH

# morhetz/gruvbox
export FZF_DEFAULT_OPTS='--color=spinner:#fb4934,hl:#928374,fg:#ebdbb2,header:#928374,info:#8ec07c,pointer:#fb4934,marker:#fb4934,fg+:#ebdbb2,prompt:#fb4934,hl+:#fb4934'
export BAT_THEME="gruvbox-dark"

EDITOR='nvim'
export EDITOR

# enable powerlevel10k shell 
source ~/.config/zsh/powerlevel10k/powerlevel10k.zsh-theme

# fzf integration
eval "$(fzf --zsh)"

# tmuxifier integration
eval "$(tmuxifier init -)"

# Enable plugin manager for Zsh
ZINIT_HOME="/Users/raphaelmor/.config/zinit/zinit.git"
source "${ZINIT_HOME}/zinit.zsh"

zinit cdreplay -q

#plugins
zinit light Aloxaf/fzf-tab
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit snippet OMZP::git


zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
zstyle ':fzf-tab:complete:z:*' fzf-preview 'eza -1 --color=always $realpath'
# switch group using `<` and `>`
zstyle ':fzf-tab:*' switch-group '<' '>'
# zstyle ':fzf-tab:*' fzf-command ftb-tmux-popups
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false

# fzf tab preview sources

# -------
# HISTORY
# -------
#set history file
export HISTFILE=~/.config/zsh/.zsh_history
# set history size (almost unlimited)
export HISTFILESIZE=1000000000
export HISTSIZE=1000000000
export SAVEHIST=$HISTSIZE
export HISTDUP=erase

## History command configuration
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_all_dups       # ignore duplicated commands history list
setopt hist_save_no_dups
setopt hist_find_no_dups
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_verify            # show command with history expansion to user before running it
setopt inc_append_history     # add commands to HISTFILE in order of execution
setopt share_history          # share command history data

# completion using arrow keys (based on history)
bindkey '^[[A' history-search-backward
bindkey '^[[B' history-search-forward

# -------
# Aliases
# -------
alias ls='eza -G --icons=auto --group-directories-first'
alias ll='eza -G --icons=auto --group-directories-first --long --git -h --extended'
alias la='eza -G -a --icons=auto --group-directories-first --long --git -h --extended'
alias cd='z'

# TODO: make sure we exit when we press escape in fzf
pick_ssh_host() {
  declare -A DEVICES
  local NAMES=()

  local state="connected"

  devicectl list devices --hide-headers --filter "State BEGINSWITH '$state'" | grep "$state" | while read -r device; do
    local INFO=$(echo $device | awk -F "[ \t\n]{2,}+" '{ printf "%s;%s;%s", $1, $2, $5 }')
    local DEVICE_NAME=$(echo $INFO | awk -F ";" '{ print $1 }')
    local DEVICE_DOMAIN=$(echo $INFO | awk -F ";" '{ print $2 }')
    local DEVICE_MODEL=$(echo $INFO | awk -F ";" '{ print $3 }')
    DEVICES+=([$DEVICE_NAME]=$DEVICE_DOMAIN)
    NAMES+=("$(echo "$DEVICE_NAME")")
  done

  if [[ "${#NAMES}" -eq 1 ]]; then
    selected_device="$NAMES[1]"
  else
    selected_device=$(print -l -- "$NAMES[@]" | fzf --tmux center,20%,20% --reverse)
  fi
  echo "${DEVICES[$selected_device]}"
}
alias ssr='ssh root@$(pick_ssh_host)'
alias ssm='ssh mobile@$(pick_ssh_host)'

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.config/zsh/.p10k.zsh ]] || source ~/.config/zsh/.p10k.zsh

# Uncomment to profile startup time
# zprof
